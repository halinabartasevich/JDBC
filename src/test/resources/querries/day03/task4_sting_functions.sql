
SELECT * FROM EMPLOYEES;

/*
    STRING FUNCTIONS
        - AS
        - CONCAT , ||
        - UPPER
        - LOWER
        - INITCAP
        - LENGTH
        - SUBSTRING

 */

SELECT FIRST_NAME, LAST_NAME FROM EMPLOYEES;

-- AS
SELECT FIRST_NAME AS GIVEN_NAME FROM EMPLOYEES; -- without space we use _
SELECT LAST_NAME AS "FAMILY NAME" FROM EMPLOYEES; -- with space we use ""


-- Display annual salary for all employees -- > First Name, Last Name, Annual Salary

SELECT FIRST_NAME, LAST_NAME, SALARY FROM EMPLOYEES;
SELECT FIRST_NAME, LAST_NAME, SALARY AS MONTHLY_SALARY FROM EMPLOYEES;
SELECT FIRST_NAME, LAST_NAME, SALARY * 12 AS ANNUAL_SALARY FROM EMPLOYEES;
SELECT FIRST_NAME, LAST_NAME, SALARY AS MONTHLY_SALARY, SALARY * 12 AS ANNUAL_SALARY FROM EMPLOYEES;


-- Make a raise on annual salary for them by 10K -- Display annual salary for all employees -- > First Name, Last Name, Annual Salary
SELECT FIRST_NAME, LAST_NAME, SALARY FROM EMPLOYEES;
SELECT FIRST_NAME, LAST_NAME, SALARY*12 AS ANNUAL_SALARY_BEFORE_INCREASE,
       SALARY*12 + 10000 AS ANNUAL_SALARY_AFTER_INCREASE FROM EMPLOYEES;

-- After increasing everyones annual salary by 10K, find who is making above 100K
SELECT FIRST_NAME, LAST_NAME, SALARY*12 AS ANNUAL_SALARY_BEFORE_INCREASE,
       SALARY*12 + 10000 AS ANNUAL_SALARY_AFTER_INCREASE FROM EMPLOYEES
WHERE SALARY*12 > 100000; -- Possible that WHERE is being applied before AS


-- FIND THE TOTAL SALARY AFTER INCREASE
SELECT SUM(SALARY*12 + 10000) AS TOTAL_AFTER_INCREASE FROM EMPLOYEES;

------------------------------------------------------------------------------------------

-- SINGLE ROW FUNCTIONS
-- CONCAT, ||
-- In Java: "" + ""
-- IN SQL: '' || ''
-- IN SQL: CONCAT('', '')


-- CONCAT
SELECT * FROM EMPLOYEES;
SELECT EMAIL FROM EMPLOYEES;
SELECT CONCAT(EMAIL, '@gmail.com') AS FULL_EMAIL_ADDRESS FROM EMPLOYEES;
SELECT CONCAT(EMAIL, '@gmail.com') AS FULL_EMAIL_ADDRESS FROM EMPLOYEES
WHERE EMAIL LIKE 'B%';


-- ||
SELECT EMAIL || '@gmail.com' AS FULL_EMAIL_ADDRESS FROM EMPLOYEES;
SELECT FIRST_NAME, LAST_NAME FROM EMPLOYEES;
SELECT FIRST_NAME || ' ' || LAST_NAME AS FULL_NAME FROM EMPLOYEES;


-- UPPER
SELECT UPPER(EMAIL || '@gmail.com') AS FULL_EMAIL_ADDRESS FROM EMPLOYEES;

-- LOWER
SELECT LOWER(EMAIL || '@gmail.com') AS FULL_EMAIL_ADDRESS FROM EMPLOYEES;


-- INITCAP
SELECT EMAIL from EMPLOYEES;
SELECT INITCAP(EMAIL) from EMPLOYEES;


-- LENGTH
SELECT EMAIL FROM EMPLOYEES;
SELECT LENGTH(EMAIL) FROM EMPLOYEES;
SELECT EMAIL, LENGTH(EMAIL) FROM EMPLOYEES;
SELECT EMAIL, LENGTH(EMAIL) AS NUM_OF_CHARS FROM EMPLOYEES;


-- Display all employees with first_name with 6 characters
SELECT * FROM EMPLOYEES;
SELECT * FROM EMPLOYEES
WHERE FIRST_NAME LIKE '______';
-- or
SELECT * FROM EMPLOYEES
WHERE LENGTH(FIRST_NAME) = 6
ORDER BY  FIRST_NAME;


-- Get me the count of all employees with first_name with 6 characters
SELECT COUNT(*) FROM EMPLOYEES
WHERE LENGTH(FIRST_NAME) = 6;

-- Get me the count of all employees with first_name with 6 characters with no DUPLICATE
SELECT COUNT (DISTINCT FIRST_NAME) FROM EMPLOYEES
WHERE LENGTH(FIRST_NAME) = 6;


-- SUBSTRING
-- Display all employees first 2 characters of First_Name
SELECT FIRST_NAME FROM EMPLOYEES;
SELECT SUBSTR(FIRST_NAME, 0) FROM EMPLOYEES; -- in SQL, 0 and 1 is the first index
SELECT SUBSTR(FIRST_NAME, 1) FROM EMPLOYEES; -- in SQL, 0 and 1 is the first index
SELECT FIRST_NAME, SUBSTR(FIRST_NAME, 2) FROM EMPLOYEES; -- in SQL, 0 and 1 is the first index

SELECT FIRST_NAME, SUBSTR(FIRST_NAME, 0, 2) FROM EMPLOYEES;
SELECT FIRST_NAME, SUBSTR(FIRST_NAME, 1, 2) FROM EMPLOYEES;


-- Display all employees first 2 characters of First_Name and where name is David
SELECT FIRST_NAME, SUBSTR(FIRST_NAME, 1, 2) FROM EMPLOYEES
WHERE FIRST_NAME = 'David';

-- Display all employees first 2 characters of First_Name and where name starts with D
SELECT FIRST_NAME, SUBSTR(FIRST_NAME, 1, 2) FROM EMPLOYEES
WHERE FIRST_NAME LIKE 'D%';


-- Display all Initials from employees -> first char fo first-name + first char of last-name
SELECT FIRST_NAME, LAST_NAME FROM EMPLOYEES;
SELECT FIRST_NAME, LAST_NAME, SUBSTR(FIRST_NAME, 0, 1), SUBSTR(LAST_NAME, 0, 1) FROM EMPLOYEES;
SELECT FIRST_NAME, LAST_NAME, SUBSTR(FIRST_NAME, 0, 1) || SUBSTR(LAST_NAME, 0, 1) FROM EMPLOYEES;
SELECT FIRST_NAME, LAST_NAME, SUBSTR(FIRST_NAME, 0, 1) || SUBSTR(LAST_NAME, 0, 1) AS INITIALS FROM EMPLOYEES;
SELECT FIRST_NAME, LAST_NAME, SUBSTR(FIRST_NAME, 0, 1) || SUBSTR(LAST_NAME, 0, 1) AS INITIALS , JOB_ID FROM EMPLOYEES
WHERE JOB_ID = 'SA_MAN';



